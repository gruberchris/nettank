name: Publish Packages to GitHub Packages

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (without SNAPSHOT)'
        required: true
        default: '0.1.0'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Important for release plugin
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
          server-id: github
          server-username: GITHUB_ACTOR
          server-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
          git config --global url."https://x-access-token:${GITHUB_TOKEN}@github.com/".insteadOf "git@github.com:"
          git config --global url."https://x-access-token:${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"
          git fetch origin
          git reset --hard origin/main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # If manually triggered, prepare and perform a release
      - name: Release with Maven
        if: github.event_name == 'workflow_dispatch'
        run: |
          mvn -B release:prepare release:perform \
            -DreleaseVersion=${{ github.event.inputs.version }} \
            -DdevelopmentVersion=${{ github.event.inputs.version }}-SNAPSHOT \
            -Darguments="-Dmaven.deploy.skip=false" \
            -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # If triggered by a release, just deploy the current version
      - name: Deploy to GitHub Packages
        if: github.event_name == 'release'
        run: mvn -B deploy -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}